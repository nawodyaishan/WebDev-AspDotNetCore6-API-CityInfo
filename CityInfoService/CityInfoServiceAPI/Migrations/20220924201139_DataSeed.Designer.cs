// <auto-generated />
using CityInfoServiceAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfoServiceAPI.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20220924201139_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("CityInfoServiceAPI.Entities.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "h9ew ud uewq dui phudwu9e dhu9wpe p",
                            name = "Colombo"
                        },
                        new
                        {
                            id = 2,
                            description = "h9ew ud uewq dui phudwu9e dhu9wpe p",
                            name = "Badulla"
                        },
                        new
                        {
                            id = 3,
                            description = "h9ew ud uewq dui phudwu9e dhu9wpe p",
                            name = "Matara"
                        });
                });

            modelBuilder.Entity("CityInfoServiceAPI.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterests");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CityId = 1,
                            description = "jdhfi wejhiuwe hweu weh piuewh  h uwh hewu hue ph phuewh",
                            name = "Lotus Tower"
                        },
                        new
                        {
                            id = 2,
                            CityId = 2,
                            description = "jdhfi wejhiuwe hweu weh piuewh  h uwh hewu hue ph phuewh",
                            name = "Lotus Tower"
                        },
                        new
                        {
                            id = 3,
                            CityId = 3,
                            description = "jdhfi wejhiuwe hweu weh piuewh  h uwh hewu hue ph phuewh",
                            name = "Lotus Tower"
                        },
                        new
                        {
                            id = 4,
                            CityId = 2,
                            description = "jdhfi wejhiuwe hweu weh piuewh  h uwh hewu hue ph phuewh",
                            name = "Lotus Tower"
                        });
                });

            modelBuilder.Entity("CityInfoServiceAPI.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfoServiceAPI.Entities.City", "city")
                        .WithMany("pointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("CityInfoServiceAPI.Entities.City", b =>
                {
                    b.Navigation("pointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
